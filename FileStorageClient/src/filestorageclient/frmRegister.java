/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package filestorageclient;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.SwingWorker;

public class frmRegister extends javax.swing.JFrame {

    // ƒê·ªëi t∆∞·ª£ng qu·∫£n l√Ω k·∫øt n·ªëi Socket
    private final ClientSocketManager clientManager;
    // Form cha (ƒë·ªÉ hi·ªÉn th·ªã l·∫°i khi c·∫ßn)
    private final JFrame parentForm;
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(frmRegister.class.getName());

    /**
     * Creates new form frmRegister
     */
    public frmRegister(JFrame parentForm, ClientSocketManager manager) {
        // G√°n gi√° tr·ªã t·ª´ tham s·ªë truy·ªÅn v√†o
        this.parentForm = parentForm;
        this.clientManager = manager;

        initComponents();

        this.setLocationRelativeTo(null);
        // Thi·∫øt l·∫≠p h√†nh vi khi ƒë√≥ng c·ª≠a s·ªï: Ch·ªâ ƒë√≥ng form hi·ªán t·∫°i, kh√¥ng tho√°t ·ª©ng d·ª•ng
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        txtConfirmPassword = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        btnRegister = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ƒêƒÉng k√Ω T√†i kho·∫£n M·ªõi");

        jLabel1.setText("Username:");

        jLabel2.setText("Password");

        txtUsername.setText("Username");

        txtPassword.setText("jPasswordField1");

        txtConfirmPassword.setText("jPasswordField1");

        jLabel3.setText("ConfirmPassword");

        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jLabel4.setText("Email");

        txtEmail.setText("Email");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(btnRegister)
                        .addGap(24, 24, 24)
                        .addComponent(btnCancel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtUsername, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(24, 24, 24)
                                .addComponent(txtConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegister)
                    .addComponent(btnCancel))
                .addContainerGap(108, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Logic x·ª≠ l√Ω ch·ª©c nƒÉng ƒêƒÉng k√Ω. Th·ª±c hi·ªán ki·ªÉm tra d·ªØ li·ªáu ƒë·∫ßu v√†o v√† g·ª≠i
     * y√™u c·∫ßu ƒêƒÉng k√Ω ƒë·∫øn Server qua SwingWorker.
     */
    private void handleRegister() {
        String username = txtUsername.getText().trim();
        String password = new String(txtPassword.getPassword());
        String confirmPassword = new String(txtConfirmPassword.getPassword());
        String email = txtEmail.getText().trim();

        // 1. Ki·ªÉm tra d·ªØ li·ªáu ƒë·∫ßu v√†o (Validation)
        if (username.isEmpty() || password.isEmpty() || confirmPassword.isEmpty() || email.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin.", "L·ªói", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (!password.equals(confirmPassword)) {
            JOptionPane.showMessageDialog(this, "M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp.", "L·ªói M·∫≠t kh·∫©u", JOptionPane.ERROR_MESSAGE);
            txtPassword.setText("");
            txtConfirmPassword.setText("");
            return;
        }

        if (!email.contains("@") || email.length() < 5) {
            JOptionPane.showMessageDialog(this, "Email kh√¥ng h·ª£p l·ªá.", "L·ªói Email", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // 2. Chuy·ªÉn sang SwingWorker ƒë·ªÉ ƒêƒÉng k√Ω
        btnRegister.setEnabled(false); // V√¥ hi·ªáu h√≥a n√∫t tr√™n EDT

        new SwingWorker<String, Void>() {
            @Override
            protected String doInBackground() throws Exception {
                // Thao t√°c m·∫°ng ch·ªâ ch·∫°y ·ªü lu·ªìng n·ªÅn 
                return clientManager.register(username, password, email);
            }

            @Override
            protected void done() {
                try {
                    // X·ª≠ l√Ω ph·∫£n h·ªìi tr√™n EDT
                    String result = get();

                    // üî• PH√ÇN T√çCH C√ÅC M√É L·ªñI CHI TI·∫æT T·ª™ SERVER
                    switch (result) {
                        case "REGISTER_SUCCESS":
                            JOptionPane.showMessageDialog(frmRegister.this, "ƒêƒÉng k√Ω th√†nh c√¥ng! B·∫°n c√≥ th·ªÉ ƒëƒÉng nh·∫≠p ngay.", "Th√†nh c√¥ng", JOptionPane.INFORMATION_MESSAGE);
                            // T·ª± ƒë·ªông chuy·ªÉn v·ªÅ form Login
                            parentForm.setVisible(true);
                            frmRegister.this.dispose();
                            break;

                        case "REGISTER_FAIL_USERNAME_EXIST":
                            JOptionPane.showMessageDialog(frmRegister.this, "T√™n ƒëƒÉng nh·∫≠p n√†y ƒë√£ c√≥ ng∆∞·ªùi s·ª≠ d·ª•ng. Vui l√≤ng ch·ªçn t√™n kh√°c.", "L·ªói ƒêƒÉng k√Ω", JOptionPane.ERROR_MESSAGE);
                            txtUsername.requestFocus();
                            break;

                        case "REGISTER_FAIL_EMAIL_EXIST":
                            JOptionPane.showMessageDialog(frmRegister.this, "ƒê·ªãa ch·ªâ Email n√†y ƒë√£ ƒë∆∞·ª£c s·ª≠ d·ª•ng. Vui l√≤ng s·ª≠ d·ª•ng Email kh√°c.", "L·ªói ƒêƒÉng k√Ω", JOptionPane.ERROR_MESSAGE);
                            txtEmail.requestFocus();
                            break;

                        case "REGISTER_FAIL_DB_ERROR":
                            JOptionPane.showMessageDialog(frmRegister.this, "ƒêƒÉng k√Ω th·∫•t b·∫°i do l·ªói CSDL n·ªôi b·ªô. Vui l√≤ng th·ª≠ l·∫°i sau.", "L·ªói H·ªá th·ªëng", JOptionPane.ERROR_MESSAGE);
                            break;

                        case "ERROR_CONNECTION":
                            JOptionPane.showMessageDialog(frmRegister.this, "L·ªói k·∫øt n·ªëi Server. Vui l√≤ng ki·ªÉm tra l·∫°i k·∫øt n·ªëi m·∫°ng.", "L·ªói M·∫°ng", JOptionPane.ERROR_MESSAGE);
                            clientManager.connect(); // Th·ª≠ k·∫øt n·ªëi l·∫°i
                            break;

                        case "ERROR_IO":
                            JOptionPane.showMessageDialog(frmRegister.this, "L·ªói giao ti·∫øp v·ªõi Server. Vui l√≤ng th·ª≠ l·∫°i.", "L·ªói I/O", JOptionPane.ERROR_MESSAGE);
                            break;

                        default:
                            // B·∫Øt l·ªói chung ho·∫∑c m√£ l·ªói kh√¥ng x√°c ƒë·ªãnh
                            JOptionPane.showMessageDialog(frmRegister.this, "ƒêƒÉng k√Ω th·∫•t b·∫°i. L·ªói kh√¥ng x√°c ƒë·ªãnh: " + result, "L·ªói", JOptionPane.ERROR_MESSAGE);
                            break;
                    }
                } catch (Exception ex) {
                    logger.log(java.util.logging.Level.SEVERE, "L·ªói SwingWorker khi ƒêƒÉng k√Ω", ex);
                    JOptionPane.showMessageDialog(frmRegister.this, "L·ªói kh√¥ng x√°c ƒë·ªãnh: " + ex.getMessage(), "L·ªói", JOptionPane.ERROR_MESSAGE);
                } finally {
                    btnRegister.setEnabled(true); // B·∫≠t l·∫°i n√∫t trong finally
                }
            }
        }.execute(); // Ch·∫°y SwingWorker
    }
    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        handleRegister();
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.parentForm.setVisible(true); // Hi·ªÉn th·ªã l·∫°i form Login
        this.dispose();                   // ƒê√≥ng form ƒêƒÉng k√Ω hi·ªán t·∫°i
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnRegister;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField txtConfirmPassword;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
